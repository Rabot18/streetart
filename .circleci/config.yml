version: 2

workflows:
  version: 2
  build:
    jobs:
#      - phpstan
#      - doctrine-schema-validate
#      - php-metrics
#      - php-phpmd
#      - php-cs-fixer
      - phpunit
      - deploy:
          requires:
#            - phpstan
#            - doctrine-schema-validate
#            - php-metrics
#            - php-phpmd
#            - php-cs-fixer
            - phpunit
          filters:  # using regex filters requires the entire branch to match
            branches:
              only:  # only branches matching the below regex filters will run
                - master

jobs:
  phpunit:
    working_directory: ~/app
    docker:
      - image: misterio92/ci-php-node:3.0
        environment:
          PG_HOST: localhost
          PG_USER: streetart
          APP_ENV: test

      # The following example uses the official postgres 9.6 image, you may also use circleci/postgres:9.6
      # which includes a few enhancements and modifications. It is possible to use either image.
      - image: mdillon/postgis:10
        environment:
          DEBUG: false
          POSTGRES_USER: streetart
          POSTGRES_PASSWORD: streetart
          POSTGRES_DB: streetart_test
    steps:
      - checkout
      - run: echo $IMAGEKIT_PRIVATE_KEY
      - run: |
          set -o allexport
          source .env.dist
          set +o allexport
      - run: echo $IMAGEKIT_PRIVATE_KEY
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --prefer-dist
      - save_cache:
           key: composer-v1-{{ checksum "composer.lock" }}
           paths:
             - vendor
      - run:
          name: Waiting for Postgres to be ready
          command: .circleci/wait-for-it.sh localhost:5432
      - run:
          name: Run migrations
          command: |
            mkdir -p var/cache var/log
            php bin/console asset:install

            php bin/console doctrine:query:sql 'CREATE EXTENSION IF NOT EXISTS postgis;'
            php bin/console doctrine:query:sql 'CREATE EXTENSION IF NOT EXISTS postgis_topology;'
            php bin/console doctrine:migration:migrate --no-interaction
#      - run:
#          name: Dump env test
#          command: composer dump-env test
      # install npm dependencies
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run build
      - run:
          name: Run tests
          command: |
            ENV=test php phpunit.phar --testdox
  phpstan:
    working_directory: ~/app
    docker:
      - image: julienpetit/docker-images:latest
    steps:
      - checkout
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --prefer-dist
      - save_cache:
           key: composer-v1-{{ checksum "composer.lock" }}
           paths:
             - vendor
      - run: vendor/bin/phpstan analyse --level 2 -c .circleci/tools/phpstan.neon src

  php-metrics:
    working_directory: ~/street-art
    docker:
      - image: jakzal/phpqa
    steps:
      - checkout
      - run: phpmetrics --report-html=var/php-metrics src
      - store_artifacts:
          path: "var/php-metrics/"

  php-phpmd:
    working_directory: ~/street-art
    docker:
      - image: jakzal/phpqa
    steps:
      - checkout
      - run: phpmd src text .circleci/tools/phpmd.xml
      - store_artifacts:
          path: "var/phpmd.html"

  php-cs-fixer:
    working_directory: ~/street-art
    docker:
      - image: julienpetit/docker-images:latest
    steps:
      - checkout
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --prefer-dist
      - save_cache:
           key: composer-v1-{{ checksum "composer.lock" }}
           paths:
             - vendor
      - run: .circleci/tools/php-cs-fixer.sh
      - store_artifacts:
          path: "var/patch.diff"

  doctrine-schema-validate:
    working_directory: ~/app
    docker:
      - image: julienpetit/docker-images:latest
      - image: mdillon/postgis:10
        environment:
            - DEBUG=false
            - POSTGRES_USER=streetart
            - POSTGRES_PASSWORD=streetart
            - POSTGRES_DB=streetart
    steps:
      - checkout
      - run: cp .circleci/.env.dist .env
      # install composer dependencies
      - restore_cache:
         keys:
           - composer-v1-{{ checksum "composer.lock" }}
           - composer-v1-
      - run: composer install --prefer-dist
      - save_cache:
           key: composer-v1-{{ checksum "composer.lock" }}
           paths:
             - vendor

      - run: .circleci/run-php.sh
      - run: bin/console doctrine:schema:validate
      - run: bin/console doctrine:schema:update --dump-sql

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3b:fb:af:b3:e0:82:dc:66:8c:71:51:dd:25:7c:af:59"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "sudo /var/www/deploy.sh"
