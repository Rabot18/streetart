version: 2
jobs:
  build:
    working_directory: ~/street-art
    # The primary container is an instance of the first list image listed. Your {% comment %} TODO: Job {% endcomment %}build commands run in this container.
    docker:
      - image: circleci/php:7.1-node

    steps:
      - checkout
      - save_cache:
          key: dependency-cache
          paths:
            - ~/.composer/cache

      # setup initial tools
      - run:
          name: Init system dependencies
          command: |
            sudo apt-get update -y \
              && sudo apt-get install -y libxml2-dev zlib1g-dev libpng12-dev libjpeg62-turbo-dev \
              && sudo apt-get clean -y
            sudo docker-php-ext-install soap zip pdo mbstring gd exif calendar
            sudo composer self-update
            cp .env.dist .env

      # install composer dependencies
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # install npm dependencies
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Test
          command: ls -al
#      - run:
#          name: Generate code coverage
#          command: './node_modules/.bin/nyc report --reporter=text-lcov'
#      - store_artifacts:
#          path: test-results.xml
#          prefix: tests
#      - store_artifacts:
#          path: coverage
#          prefix: coverage
#


workflows:
    version: 2
    build_and_test:
        jobs:
          - build
          - test:
              requires:
                - build





#version: 2
#machine:
#  php:
#    version: 7.1.3
#
#jobs:
#  build:
#      docker:
#        - image: circleci/python:3.6.1
#      steps:
#        - checkout
#        - run: ls -al
#
#dependencies:
#  pre:
#    - mkdir -p ~/.composer/cache
#    - mkdir -p ~/.php-cs-fixer
#    - echo "memory_limit = 256M" > /opt/circleci/php/$(phpenv global)/etc/conf.d/memory.ini
#  override:
#    - composer install --prefer-dist --optimize-autoloader --no-interaction --no-scripts
#    - vendor/bin/php-cs-fixer fix --config=.php_cs.dist --cache-file ~/.php-cs-fixer/.php_cs.cache --diff --verbose
#  cache_directories:
#    - ~/.composer/cache
#    - ~/.php-cs-fixer
#
#test:
#  override:
#    - mkdir -p $CIRCLE_TEST_REPORTS/phpunit
##    - vendor/bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml
##    - mkdir -p $CIRCLE_TEST_REPORTS/behat
##    - vendor/bin/behat --out $CIRCLE_TEST_REPORTS/behat/test.log
#  post:
#    - FILES_WITHOUT_LF_AT_EOF=$(for file in $(git grep --cached -Il ''); do test $(tail -c 1 $file) && echo $file; done); if [[ -n $FILES_WITHOUT_LF_AT_EOF ]]; then echo -e "Some files have missing LF at EOF:\n$FILES_WITHOUT_LF_AT_EOF" && exit 1; fi;
#    - FILES_WITH_TRAILING_WHITESPACES=$(git grep --cached -Il " $"); if [[ $FILES_WITH_TRAILING_WHITESPACES ]]; then echo -e "Some files have trailing whitespaces at line endings:\n$FILES_WITH_TRAILING_WHITESPACES" && exit 1; fi;
#    - vendor/bin/phpmd src/ text phpmd.xml.dist --ignore-violations-on-exit