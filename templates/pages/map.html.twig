{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/lib/leaflet/leaflet.css') }}" />
    <link rel="stylesheet" href="{{ asset('assets/lib/cluster/MarkerCluster.css') }}" />
    <link rel="stylesheet" href="{{ asset('assets/css/Leaflet.Photo.css') }}" />
    <link rel="stylesheet" href="{{ asset('assets/css/map.css') }}" />
{% endblock %}

{% block title %}Carte{% endblock %}

{% block body_attributes %}
    onload="showImages()"
{% endblock body_attributes %}

{% block body_classes %}content-map{% endblock body_classes %}
{% block content_classes %}content-map{% endblock content_classes %}

{% block body %}
    <div class="page-home content-map">
        <div id="map" class="content-map"></div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('assets/lib/leaflet/leaflet.js') }}"></script>
    <script src="{{ asset('assets/lib/cluster/leaflet.markercluster.js') }}"></script>
    <script src="{{ asset('assets/lib/Leaflet.Photo.js') }}"></script>
    <script type="application/javascript">
        var map = L.map('map').setView([46.506755997519654, 7.699578983615311], 5);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
            '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
            id: 'mapbox.streets'
        }).addTo(map);

        var photoLayer = L.photo.cluster().on('click', function (evt) {
            var photo = evt.layer.photo,
                template = '<img src="{url}"/></a><p>{caption}</p>';

            evt.layer.bindPopup(L.Util.template(template, evt.layer.photo), {
                className: 'leaflet-popup-photo',
                minWidth: 400
            }).openPopup();
        });

        function showImages() {
            var datas = '{{ pois | raw }}';
            var photos = [];
            var data = JSON.parse(datas);
            for (var i = 0; i < data.length; i++) {
                var photo = data[i];
                photos.push({
                    id: photo.id,
                    timestamp: parseInt(photo.timestamp),
                    lat: parseFloat(photo.lat),
                    lng: parseFloat(photo.lng),
                    url: photo.url,
                    caption: photo.caption,
                    iconUrl: photo.iconUrl
                });
            }
            photoLayer.add(photos).addTo(map);
            // map.fitBounds(photoLayer.getBounds());
        }
    </script>
{% endblock %}