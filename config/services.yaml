# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    locale_available: 'en|fr'
    contentful_locale:
        fr: fr-FR
        en: en-US
    google_analytics_json_key: '%kernel.root_dir%/%env(GOOGLE_ANALYTICS_KEY)%'
    google_analytics_view_id: '%env(GOOGLE_ANALYTICS_VIEW)%'
    imagekit_private_key: '%env(IMAGEKIT_PRIVATE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    # Filters
    App\Filter\LocationFilter:
        arguments: [ '@doctrine', '@request_stack', '@?logger', { region: ~ } ]
        tags: [ 'api_platform.filter' ]

    App\Manager\PoiManager:
        arguments: [ '@doctrine.orm.entity_manager', '@vich_uploader.templating.helper.uploader_helper', '@liip_imagine.service.filter']

    App\Service\Mailer:
        arguments: [ '@swiftmailer.mailer.default', '@router.default', '@templating.engine.twig', '@assets.packages', '@translator', '@vich_uploader.templating.helper.uploader_helper', '@liip_imagine.service.filter', []]
        public: true
        autowire: true
        autoconfigure: false

    MediaFigaro\GoogleAnalyticsApi\Service\GoogleAnalyticsService: '@google_analytics_api.api'

    my_user_provider:
        class: App\Security\Provider\UserProvider
        arguments: ['@fos_user.user_manager', {facebook: facebookId, instagram: instagramId}, '@security.password_encoder', '@security.token_storage', '@translator', '@session']

    App\Service\ImageKit:
        arguments: [ '%kernel.environment%', '%imagekit_private_key%' ]

    App\Listener\User\UserGetMeSubscriber:
        class: App\Listener\User\UserGetMeSubscriber
        tags:
            - { name: kernel.event_subscriber }

    App\Twig\AppExtension:
        tags:
            - { name: twig.extension }
